---
import Navbar from '../components/Navbar.astro';
import WorksCard from '../components/WorksCard.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import BackToTop from '../components/BackToTop.astro';
import Footer from '../components/Footer.astro';

const base = import.meta.env.BASE_URL || '/';

interface Work {
  title: string;
  date: string;
  image: string;
  link: string;
}

const worksList: Work[] = [
  { title: '字體設計｜主題設計', date: '2025-01-29', image: 'images/works_01_a.svg', link: '01_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-02-05', image: 'images/works_02_a.svg', link: '02_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-02-13', image: 'images/works_03_a.svg', link: '03_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-02-19', image: 'images/works_04_a.svg', link: '04_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-02-26', image: 'images/works_05_a.svg', link: '05_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-01-29', image: 'images/works_06_a.svg', link: '06_typography_theme' },
  { title: '字體設計｜音樂視覺', date: '2025-02-05', image: 'images/works_07_a.svg', link: '01_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-02-13', image: 'images/works_08_a.svg', link: '02_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-02-19', image: 'images/works_09_a.svg', link: '03_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-02-26', image: 'images/works_10_a.svg', link: '04_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-02-19', image: 'images/works_11_a.svg', link: '05_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-02-26', image: 'images/works_12_a.svg', link: '06_typography_music_visual' },
];
---

<BaseLayout title="作品集">
  <Navbar slot="navbar" />

  <!-- 篩選按鈕（可水平滑動） -->
  <div class="filter-buttons-container">
    <div class="filter-buttons">
      <button data-filter="all" class="active">全部</button>
      <button data-filter="字體設計｜主題設計">字體設計｜主題設計</button>
      <button data-filter="字體設計｜音樂視覺">字體設計｜音樂視覺</button>
      <div class="indicator"></div>
    </div>
  </div>

  <!-- 卡片區域 -->
  <main class="works-grid" id="works-grid">
    {worksList.map((work: Work) => (
      <a href={`${base}${work.link.replace(/^\//, '')}`} class="fade-in" data-category={work.title}>
        <WorksCard
          title={work.title}
          date={work.date}
          image={`${base}${work.image}`}
        />
      </a>
    ))}
  </main>
  <BackToTop />
  <Footer slot="footer" />

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const buttons = document.querySelectorAll<HTMLButtonElement>('.filter-buttons button');
      const worksGrid = document.getElementById('works-grid')!;
      const indicator = document.querySelector<HTMLDivElement>('.indicator')!;
      const container = document.querySelector<HTMLDivElement>('.filter-buttons-container')!;

      buttons.forEach((btn) => {
        btn.addEventListener('click', () => {
          // 切換 active 樣式
          buttons.forEach((b) => b.classList.remove('active'));
          btn.classList.add('active');

          // 移動 indicator
          indicator.style.left = btn.offsetLeft + 'px';
          indicator.style.width = btn.offsetWidth + 'px';

          // 保持點擊按鈕在可視範圍
          const btnLeft = btn.offsetLeft;
          const btnRight = btnLeft + btn.offsetWidth;
          const containerScrollLeft = container.scrollLeft;
          const containerWidth = container.offsetWidth;

          if (btnLeft < containerScrollLeft) {
            container.scrollTo({ left: btnLeft, behavior: 'smooth' });
          } else if (btnRight > containerScrollLeft + containerWidth) {
            container.scrollTo({ left: btnRight - containerWidth, behavior: 'smooth' });
          }

          // 篩選卡片
          const filter = btn.dataset.filter!;
          const items = worksGrid.querySelectorAll<HTMLAnchorElement>('a');

          items.forEach((item) => {
            if (filter === 'all' || item.dataset.category === filter) {
              item.classList.remove('fade-out');
              item.classList.add('fade-in');
              item.style.display = 'block';
            } else {
              item.classList.remove('fade-in');
              item.classList.add('fade-out');
              setTimeout(() => { item.style.display = 'none'; }, 300);
            }
          });
        });
      });

      // 初始化 indicator
      const activeBtn = document.querySelector<HTMLButtonElement>('.filter-buttons button.active')!;
      indicator.style.left = activeBtn.offsetLeft + 'px';
      indicator.style.width = activeBtn.offsetWidth + 'px';

      window.addEventListener('resize', () => {
        const activeBtn = document.querySelector<HTMLButtonElement>('.filter-buttons button.active')!;
        indicator.style.left = activeBtn.offsetLeft + 'px';
        indicator.style.width = activeBtn.offsetWidth + 'px';
      });
    });
  </script>

  <style>
    /* 可水平滑動容器 */
    .filter-buttons-container {
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      margin: 20px 0;
      padding: 0 16px;
    }

    .filter-buttons {
      display: flex;
      justify-content: center;
      gap: 12px;
      position: relative;
      width: max-content;
      margin: 0 auto;
    }

    .filter-buttons button {
      background: none;
      border: none;
      padding: 8px 16px;
      cursor: pointer;
      font-size: 16px;
      color: rgba(255, 255, 255, 0.6);
      transition: color 0.3s;
      white-space: nowrap;
    }

    .filter-buttons button.active {
      color: #ffffff;
      font-weight: bold;
    }

    .indicator {
      position: absolute;
      bottom: 0;
      height: 2px;
      background: #E5AF3A;
      transition: all 0.3s ease;
    }

    /* 作品集 */
    .works-grid {
      max-width: 1200px;
      margin: 0 auto;
      padding: 40px 80px;
      display: grid;
      gap: 64px;
      grid-template-columns: repeat(3, 1fr);
    }

    .works-grid a {
      text-decoration: none;
      color: inherit;
      opacity: 1;
      transition: opacity 0.3s ease, transform 0.3s ease;
    }

    .fade-in {
      animation: fadeIn 0.3s forwards;
    }

    .fade-out {
      animation: fadeOut 0.3s forwards;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    @keyframes fadeOut {
      from { opacity: 1; transform: translateY(0); }
      to { opacity: 0; transform: translateY(10px); }
    }

    @media (max-width: 1024px) {
      .works-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }
    @media (max-width: 600px) {
      .works-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</BaseLayout>
